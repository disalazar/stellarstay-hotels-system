spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
    show-sql: false
    properties:
      hibernate:
        format_sql: false
  sql:
    init:
      mode: never
      platform: postgres
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: stellarstay-group
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    listener:
      missing-topics-fatal: false
    topic:
      reservations: ${KAFKA_TOPIC_RESERVATIONS}

server:
  port: ${SERVER_PORT}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

logging:
  level:
    org.hibernate.SQL: OFF
    org.hibernate.type.descriptor.sql.BasicBinder: OFF

resilience4j:
  thread-pool-bulkhead:
    instances:
      reservationBulkhead:
        maxThreadPoolSize: 50   # Allows up to 50 concurrent reservations
        coreThreadPoolSize: 20 # Core of threads for basic concurrency
        queueCapacity: 200     # Up to 200 requests on hold if the limit is exceeded
        executorService:
          beanName: reservationTaskExecutor
